#
# brent yi
#

### nested sessions
bind-key a send-prefix

### vim integration
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

### visuals
# for tmux version < 2.2 {
  set-option -gq status-utf8 on
  set-window-option -gq utf8 on
# }
# for tmux version < 2.9 {
  set-option -gq pane-active-border-fg white
  set-window-option -gq window-status-activity-fg colour8
  set-window-option -gq window-status-activity-bg white
  set-window-option -gq window-status-current-fg white
  set-window-option -gq window-status-current-attr reverse
# }
# for tmux version >= 2.9 {
  set-option -gq pane-active-border-style fg=white
  set-window-option -gq window-status-activity-style fg=colour8,bg=white
  set-window-option -gq window-status-current-style fg=white,reverse
# }
set-option -g default-terminal "screen-256color"
set-option -g status-justify left
set-option -g status-fg white
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-left ' #[fg=white,bold]##S #[fg=white]Â» '
set-option -g status-right '#[fg=white, bold]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
if-shell 'test -n "$user_color"' \
    'set-option -g status-bg $user_color; \
    set-window-option -g window-status-current-bg $user_color;'

### general usability
set-option -g history-limit 10000
set-window-option -g xterm-keys on
set-window-option -g mode-keys vi
set-window-option -g monitor-activity on
set-window-option -g mode-keys vi
set-window-option -g automatic-rename
set-option -g renumber-windows on
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'

### bindings
bind-key r source-file ~/.tmux.conf
bind-key b break-pane
bind-key j command-prompt "join -t:%%"
bind-key -n C-Space next-window
bind-key -n C-M-Space previous-window
bind-key -n C-n last-window
bind A command-prompt "rename-window %%"
set-window-option -g aggressive-resize on
bind p paste-buffer

### why aren't these things backwards compatible :(

# vim-style bindings
if-shell '[ $(echo "$(tmux -V | sed 's/[^0-9,^.]*//g') < 2.4" | bc) -eq 1 ]' \
  "bind-key -t vi-copy 'v' begin-selection; \
   bind-key -t vi-copy 'y' copy-pipe 'xclip -in -selection clipboard'"
if-shell '[ $(echo "$(tmux -V | sed 's/[^0-9,^.]*//g') >= 2.4" | bc) -eq 1 ]' \
  "bind-key -T copy-mode-vi 'v' send -X begin-selection; \
   bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"

# open windows in current path
if-shell '[ $(echo "$(tmux -V | sed 's/[^0-9,^.]*//g') >= 2.0" | bc) -eq 1 ]' \
  "bind '\"' split-window -c '#{pane_current_path}'; \
   bind % split-window -h -c '#{pane_current_path}'; \
   bind c new-window -c '#{pane_current_path}'"
